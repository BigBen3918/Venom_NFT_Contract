pragma ever-solidity >= 0.61.2;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

// importing all standards bases
import 'd:/Working/NFT/venom-nft/node_modules/@broxus/tip4/contracts/TIP4_1/TIP4_1Nft.tsol';
import 'd:/Working/NFT/venom-nft/node_modules/@broxus/tip4/contracts/TIP4_2/TIP4_2Nft.tsol';
import 'd:/Working/NFT/venom-nft/node_modules/@broxus/tip4/contracts/TIP4_3/TIP4_3Nft.tsol';

contract Nft is TIP4_1Nft, TIP4_2Nft, TIP4_3Nft {

    // just call constructors of all implemented classes
    constructor(
        address owner,
        address sendGasTo,
        uint128 remainOnNft,
        string json, // for TIP-4.2
        TvmCell codeIndex, // for TIP-4.3
        uint128 indexDeployValue, // for TIP-4.3
        uint128 indexDestroyValue // for TIP-4.3
    ) TIP4_1Nft(
        owner,
        sendGasTo,
        remainOnNft
    ) TIP4_2Nft (
        json
    ) TIP4_3Nft (
        indexDeployValue,
        indexDestroyValue,
        codeIndex
    ) 
    public { }

    // Also, you need to implement some handlers, linked with NFT transferring
    // Maybe you need to implement something special, but you can also use default handlers
    
    function _beforeTransfer(
        address to, 
        address sendGasTo, 
        mapping(address => CallbackParams) callbacks
    ) internal virtual override(TIP4_1Nft, TIP4_3Nft) {
        TIP4_3Nft._destructIndex(sendGasTo);
    }

    function _afterTransfer(
        address to, 
        address sendGasTo, 
        mapping(address => CallbackParams) callbacks
    ) internal virtual override(TIP4_1Nft, TIP4_3Nft) {
        TIP4_3Nft._deployIndex();
    }

    function _beforeChangeOwner(
        address oldOwner, 
        address newOwner,
        address sendGasTo, 
        mapping(address => CallbackParams) callbacks
    ) internal virtual override(TIP4_1Nft, TIP4_3Nft) {
        TIP4_3Nft._destructIndex(sendGasTo);
    }   

    function _afterChangeOwner(
        address oldOwner, 
        address newOwner,
        address sendGasTo, 
        mapping(address => CallbackParams) callbacks
    ) internal virtual override(TIP4_1Nft, TIP4_3Nft) {
        TIP4_3Nft._deployIndex();
    }

}